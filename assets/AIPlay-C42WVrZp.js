var Ce=Object.defineProperty;var Ie=(r,t,e)=>t in r?Ce(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var p=(r,t,e)=>Ie(r,typeof t!="symbol"?t+"":t,e);import{u as Pe,r as g,j as s}from"./index-_Bbgj9b5.js";import{u as Te}from"./gameStore-sNQtupKN.js";import{m as Fe}from"./proxy-BwuWwfsD.js";const P={manhattanDistance(r,t,e=1){return e*(Math.abs(r.x-t.x)+Math.abs(r.y-t.y))},isValidPosition(r,t,e,a){if(r.x<0||r.x>=t||r.y<0||r.y>=t||a.some(l=>l.x===r.x&&l.y===r.y))return!1;for(let l=0;l<e.length-1;l++)if(e[l].x===r.x&&e[l].y===r.y)return!1;return!0},getNeighbors(r,t,e,a){return[{x:r.x,y:r.y-1},{x:r.x,y:r.y+1},{x:r.x-1,y:r.y},{x:r.x+1,y:r.y}].filter(m=>P.isValidPosition(m,t,e,a))},getDirectionFromPositions(r,t){return t.x<r.x?"LEFT":t.x>r.x?"RIGHT":t.y<r.y?"UP":t.y>r.y?"DOWN":"RIGHT"},getRandomDirection(r,t,e,a){var n,f;const l=P.getNeighbors(r,e,t,a);if(l.length===0){if(t.length>1){const d=r.x-(((n=t[1])==null?void 0:n.x)||r.x),x=r.y-(((f=t[1])==null?void 0:f.y)||r.y);if(d>0)return"RIGHT";if(d<0)return"LEFT";if(x>0)return"DOWN";if(x<0)return"UP"}return"RIGHT"}const m=l[Math.floor(Math.random()*l.length)];return P.getDirectionFromPositions(r,m)}};class oe{constructor(t){p(this,"boardSize",0);p(this,"snake",[]);p(this,"food",{x:0,y:0});p(this,"obstacles",[]);p(this,"path",[]);p(this,"pathIndex",0);p(this,"config");this.config={heuristicWeight:(t==null?void 0:t.heuristicWeight)??1}}initialize(t,e,a,l){this.boardSize=t,this.snake=[...e],this.food={...a},this.obstacles=[...l],this.calculatePath()}update(t,e,a){this.snake=[...t],this.food={...e},this.obstacles=[...a],this.calculatePath()}getPath(){return[...this.path]}getVisualizationData(){return{}}getNextDirection(t,e){if(this.path.length===0||this.pathIndex>=this.path.length)return P.getRandomDirection(t[0],t,this.boardSize,this.obstacles);const a=t[0],l=this.path[this.pathIndex];return this.pathIndex++,P.getDirectionFromPositions(a,l)}findPath(t,e){const a=[],l=new Set,m={x:t.x,y:t.y,g:0,h:this.heuristic(t,e),f:this.heuristic(t,e),parent:null};for(a.push(m);a.length>0;){a.sort((d,x)=>d.f-x.f);const n=a.shift();if(l.add(`${n.x},${n.y}`),n.x===e.x&&n.y===e.y){const d=[];let x=n;for(;x!==null;)d.unshift({x:x.x,y:x.y}),x=x.parent;return d.shift(),d}const f=P.getNeighbors({x:n.x,y:n.y},this.boardSize,this.snake,this.obstacles);for(const d of f){if(l.has(`${d.x},${d.y}`))continue;const x=n.g+1,v=a.find(j=>j.x===d.x&&j.y===d.y);if(v)x<v.g&&(v.g=x,v.f=x+v.h,v.parent=n);else{const j={x:d.x,y:d.y,g:x,h:this.heuristic(d,e),f:x+this.heuristic(d,e),parent:n};a.push(j)}}}return null}heuristic(t,e){return P.manhattanDistance(t,e,this.config.heuristicWeight)}calculatePath(){if(this.snake.length===0)return;const t=this.snake[0],e=this.findPath(t,this.food);if(e&&e.length>0)this.path=e,this.pathIndex=0;else{const a=this.findSafeMove();a?(this.path=[a],this.pathIndex=0):this.path=[]}}findSafeMove(){if(this.snake.length===0)return null;const t=this.snake[0],e=P.getNeighbors(t,this.boardSize,this.snake,this.obstacles);return e.length===0?null:e.reduce((a,l)=>{let m=Number.MAX_SAFE_INTEGER;for(let f=1;f<this.snake.length;f++){const d=this.snake[f],x=this.heuristic(l,d);m=Math.min(m,x)}let n=Number.MAX_SAFE_INTEGER;if(a)for(let f=1;f<this.snake.length;f++){const d=this.snake[f],x=this.heuristic(a,d);n=Math.min(n,x)}return m>n?l:a},e[0])}}class De{constructor(t){p(this,"boardSize",0);p(this,"snake",[]);p(this,"food",{x:0,y:0});p(this,"obstacles",[]);p(this,"cycle",[]);p(this,"hamiltonianCycle",new Map);p(this,"currentCycleIndex",0);p(this,"config");this.config={shortcutThreshold:(t==null?void 0:t.shortcutThreshold)??.5}}initialize(t,e,a,l){if(this.boardSize=t,this.snake=[...e],this.food={...a},this.obstacles=[...l],this.generateHamiltonianCycle(),e.length>0){const m=e[0],n=`${m.x},${m.y}`;this.hamiltonianCycle.has(n)&&(this.currentCycleIndex=this.hamiltonianCycle.get(n))}}update(t,e,a){if(this.snake=[...t],this.food={...e},this.obstacles=[...a],t.length>0){const l=t[0],m=`${l.x},${l.y}`;this.hamiltonianCycle.has(m)&&(this.currentCycleIndex=this.hamiltonianCycle.get(m))}}getPath(){return this.cycle}getVisualizationData(){return{hamiltonianCycle:this.cycle}}getNextDirection(t,e){if(t.length===0||this.cycle.length===0)return P.getRandomDirection(t[0],t,this.boardSize,this.obstacles);const a=t[0];let l;const m=this.findShortcutToFood();if(m)l=m;else{const n=(this.currentCycleIndex+1)%this.cycle.length;l=this.cycle[n]}return P.getDirectionFromPositions(a,l)}findPath(){return null}generateHamiltonianCycle(){this.cycle=[],this.hamiltonianCycle.clear(),this.boardSize%2!==0&&console.warn("Hamiltonian cycle works best with even-sized boards");const t=[];for(let e=0;e<this.boardSize;e++)t.push({x:e,y:0});for(let e=1;e<this.boardSize-1;e++)t.push({x:this.boardSize-1,y:e});for(let e=this.boardSize-1;e>0;e--)if((this.boardSize-e)%2===1)for(let a=this.boardSize-2;a>=0;a--)t.push({x:a,y:e});else for(let a=0;a<this.boardSize-1;a++)t.push({x:a,y:e});for(let e=0;e<t.length;e++){const a=t[e];this.hamiltonianCycle.set(`${a.x},${a.y}`,e)}this.cycle=t}findShortcutToFood(){if(this.snake.length===0||!this.food)return null;const t=this.snake[0],e=`${t.x},${t.y}`,a=`${this.food.x},${this.food.y}`;if(!this.hamiltonianCycle.has(a))return null;const l=this.hamiltonianCycle.get(e),m=this.hamiltonianCycle.get(a);if(this.isShortcutSafe(t,this.food)){const f=P.getNeighbors(t,this.boardSize,this.snake,this.obstacles);let d=null,x=1/0;for(const v of f){const j=`${v.x},${v.y}`;if(this.hamiltonianCycle.has(j)){const h=this.hamiltonianCycle.get(j);let k=(m-h+this.cycle.length)%this.cycle.length;k<x&&(x=k,d=v)}}return d}const n=(l+1)%this.cycle.length;return this.cycle[n]}isShortcutSafe(t,e){const a=Math.floor(this.boardSize*this.boardSize*this.config.shortcutThreshold);if(this.snake.length<a)return!1;const l=`${t.x},${t.y}`,m=`${e.x},${e.y}`,n=this.hamiltonianCycle.get(l),d=(this.hamiltonianCycle.get(m)-n+this.cycle.length)%this.cycle.length;for(let x=1;x<this.snake.length;x++){const v=this.snake[x],j=`${v.x},${v.y}`;if(this.hamiltonianCycle.has(j)&&(this.hamiltonianCycle.get(j)-n+this.cycle.length)%this.cycle.length<d)return!1}return!0}}class ze{static createAlgorithm(t,e,a,l,m,n){let f;switch(t){case"astar":f=new oe({heuristicWeight:(n==null?void 0:n.heuristicWeight)??1});break;case"hamiltonian":f=new De({shortcutThreshold:((n==null?void 0:n.shortcutThreshold)??33)/100});break;default:f=new oe({heuristicWeight:(n==null?void 0:n.heuristicWeight)??1})}return f.initialize(e,a,l,m),f}}class he{constructor(t,e,a,l,m="astar",n){p(this,"config");p(this,"pathfinder");this.config={heuristicWeight:(n==null?void 0:n.heuristicWeight)??1,shortcutThreshold:(n==null?void 0:n.shortcutThreshold)??33},this.pathfinder=ze.createAlgorithm(m,t,e,a,l,this.config)}update(t,e,a){this.pathfinder.update(t,e,a)}getNextDirection(t){const e=this.getCurrentDirection(t);return this.pathfinder.getNextDirection(t,e)}getCurrentDirection(t){if(t.length<2)return"RIGHT";const e=t[0],a=t[1];return e.x<a.x?"LEFT":e.x>a.x?"RIGHT":e.y<a.y?"UP":e.y>a.y?"DOWN":"RIGHT"}getPath(){return this.pathfinder.getPath()}getHamiltonianCycle(){return this.pathfinder.getVisualizationData().hamiltonianCycle||[]}}const Re=()=>{const r=Pe(),t=g.useRef(null),[e,a]=g.useState(!1),[l,m]=g.useState("normal"),[n,f]=g.useState(null),[d,x]=g.useState([]),[v,j]=g.useState(!1),{snake:h,food:k,obstacles:D,score:te,gameStatus:se,boardSize:F,theme:ce,moveSnake:ie,startGame:de,pauseGame:xe,resetGame:me,setDirection:ae,direction:_}=Te(),T={CLASSIC:{background:"#000000",snake:"#00FF00",food:"#FF0000",obstacles:"#888888",gridLines:"#333333",path:"#0088FF"},DARK:{background:"#111111",snake:"#4CAF50",food:"#F44336",obstacles:"#757575",gridLines:"#212121",path:"#03A9F4"},RETRO:{background:"#003366",snake:"#FFCC00",food:"#FF6633",obstacles:"#666699",gridLines:"#004488",path:"#33CCFF"},NEON:{background:"#0D0221",snake:"#39FF14",food:"#FF00FF",obstacles:"#3E065F",gridLines:"#1E0555",path:"#00FFFF"}}[ce],ne=g.useRef(0),[w,ge]=g.useState("astar"),[E,ue]=g.useState({snakeLength:0,headPosition:null}),[X,B]=g.useState([]),[M,fe]=g.useState(!0),[H,ye]=g.useState(!0),[K,be]=g.useState(!0),[R,pe]=g.useState(1),[A,U]=g.useState("algorithm"),[G,ve]=g.useState(33),[q,we]=g.useState(T.path),[Y,Se]=g.useState(.1);g.useEffect(()=>{h.length>0&&ue({snakeLength:h.length,headPosition:{x:h[0].x,y:h[0].y}})},[h]),g.useEffect(()=>{if(e&&!n){const c=new he(F,h,k,D,w,{heuristicWeight:R,shortcutThreshold:G});f(c)}},[e,F,h,k,D,w,R,G]),g.useEffect(()=>{if(e&&n){const c=new he(F,h,k,D,w,{heuristicWeight:R,shortcutThreshold:G});f(c),B(w==="hamiltonian"?c.getHamiltonianCycle():[])}},[w,e,F,h,k,D,R,G]),g.useEffect(()=>{if(e&&n){n.update(h,k,D);const c=n.getPath();x(c),w==="hamiltonian"&&B(n.getHamiltonianCycle());const i=n.getNextDirection(h);i&&ae(i)}},[e,h,k,D,n,ae,w]),g.useEffect(()=>{let c;if(e){const i={"very-slow":300,slow:200,normal:150,fast:100,"very-fast":50,turbo:25,instant:5};c=window.setInterval(()=>{ie()},i[l])}return()=>{c&&clearInterval(c)}},[e,l,ie]),g.useEffect(()=>{const c=t.current;if(!c)return;const i=c.getContext("2d");if(!i)return;console.log("Snake array in render:",h),(!h||h.length===0)&&console.warn("Empty snake array detected in render function!");const C=window.innerWidth,I=window.innerHeight;let b=Math.min(C*.9,I-250);b=Math.max(b,300),b=Math.floor(b),c.width=b,c.height=b;const o=b/F;ne.current=o,i.fillStyle=T.background,i.fillRect(0,0,c.width,c.height),i.strokeStyle=T.gridLines,i.lineWidth=.5;for(let y=0;y<=F;y++)i.beginPath(),i.moveTo(y*o,0),i.lineTo(y*o,c.height),i.stroke(),i.beginPath(),i.moveTo(0,y*o),i.lineTo(c.width,y*o),i.stroke();if(e&&d.length>0&&M&&(i.strokeStyle=q,i.lineWidth=2,i.beginPath(),h.length>0)){const y=h[0];i.moveTo((y.x+.5)*o,(y.y+.5)*o),d.forEach(u=>{i.lineTo((u.x+.5)*o,(u.y+.5)*o)}),i.stroke()}if(e&&w==="hamiltonian"&&X.length>0&&H){i.strokeStyle=`rgba(255, 255, 255, ${Y})`,i.lineWidth=1,i.beginPath();const y=X[0];i.moveTo((y.x+.5)*o,(y.y+.5)*o),X.forEach((u,S)=>{S>0&&i.lineTo((u.x+.5)*o,(u.y+.5)*o)}),i.lineTo((y.x+.5)*o,(y.y+.5)*o),i.stroke(),i.fillStyle=`rgba(255, 255, 255, ${Y})`,X.forEach(u=>{i.beginPath(),i.arc((u.x+.5)*o,(u.y+.5)*o,o*.1,0,Math.PI*2),i.fill()})}i.fillStyle=T.obstacles,D.forEach(({x:y,y:u})=>{i.fillRect(y*o,u*o,o,o)}),i.fillStyle=T.food,i.beginPath();const Z=k.x*o+o/2,ke=k.y*o+o/2;if(i.arc(Z,ke,o/2,0,Math.PI*2),i.fill(),h.length>1)for(let y=1;y<h.length;y++){const u=h[y],S=u.x*o,$=u.y*o;i.fillStyle=y%2===0?T.snake:re(T.snake,-10),i.fillRect(S,$,o,o)}if(h.length>0){console.log("Rendering head:",h[0]),console.log("Animation properties:",{x:h[0].x,y:h[0].y,animX:h[0].animX,animY:h[0].animY,prevX:h[0].prevX,prevY:h[0].prevY});const y=h[0],u=(y.x+.5)*o,S=(y.y+.5)*o,$=o*.6;i.beginPath(),i.arc(u,S,$+2,0,Math.PI*2),i.fillStyle="rgba(255, 255, 255, 0.7)",i.fill(),i.beginPath(),i.arc(u,S,$,0,Math.PI*2);const ee=i.createRadialGradient(u,S,0,u,S,$);ee.addColorStop(0,re(T.snake,30)),ee.addColorStop(1,T.snake),i.fillStyle=ee,i.fill(),i.fillStyle="#000000";const le=o*.15;let W,L,O,V;const N=$*.5;switch(_){case"UP":W=u-N,L=S-N*.5,O=u+N,V=S-N*.5;break;case"DOWN":W=u-N,L=S+N*.5,O=u+N,V=S+N*.5;break;case"LEFT":W=u-N*.5,L=S-N,O=u-N*.5,V=S+N;break;case"RIGHT":default:W=u+N*.5,L=S-N,O=u+N*.5,V=S+N;break}i.beginPath(),i.arc(W,L,le,0,Math.PI*2),i.fill(),i.beginPath(),i.arc(O,V,le,0,Math.PI*2),i.fill()}e&&E.headPosition&&K&&(i.fillStyle="rgba(255, 255, 255, 0.8)",i.font="12px Arial",i.fillText(`Snake Length: ${E.snakeLength}`,10,20),i.fillText(`Head: (${E.headPosition.x}, ${E.headPosition.y})`,10,40),i.fillText(`Direction: ${_}`,10,60),i.fillText(`Algorithm: ${w.toUpperCase()}`,10,80))},[h,k,D,F,T,d,e,_,E,M,H,Y,q]);const re=(c,i)=>{const C=parseInt(c.replace("#",""),16),I=Math.round(2.55*i),z=(C>>16)+I,b=(C>>8&255)+I,o=(C&255)+I;return"#"+(16777216+(z<255?z<0?0:z:255)*65536+(b<255?b<0?0:b:255)*256+(o<255?o<0?0:o:255)).toString(16).slice(1)};g.useEffect(()=>{const c=()=>{const i=t.current;if(!i)return;const C=window.innerWidth,I=window.innerHeight;let b=Math.min(C*.9,I-250);b=Math.max(b,300),b=Math.floor(b),i.width=b,i.height=b,ne.current=b/F};return window.addEventListener("resize",c),()=>window.removeEventListener("resize",c)},[F]),g.useEffect(()=>{se==="GAME_OVER"&&e&&(j(!0),a(!1))},[se,e]);const J=()=>{j(!1),me(),de(),a(!0)},Ne=()=>{xe(),a(!1),f(null),x([])};g.useEffect(()=>{h.length>0&&e&&console.log("Snake update:",{length:h.length,head:h[0],tail:h[h.length-1],fullSnake:[...h]})},[h,e]);const Q=(c,i,C,I,z,b,o)=>s.jsxs("div",{className:"w-full mb-3",children:[s.jsxs("div",{className:"flex justify-between items-center mb-1",children:[s.jsxs("label",{className:"text-gray-300 text-sm",children:[c,o&&s.jsx("span",{className:"ml-1 text-gray-500 cursor-help",title:o,children:"ⓘ"})]}),s.jsx("span",{className:"text-white text-sm font-mono",children:i})]}),s.jsx("input",{type:"range",min:I,max:z,step:b,value:i,onChange:Z=>C(parseFloat(Z.target.value)),className:"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer"})]}),je=(c,i,C)=>s.jsx("div",{className:"w-full mb-3",children:s.jsxs("div",{className:"flex justify-between items-center mb-1",children:[s.jsx("label",{className:"text-gray-300 text-sm",children:c}),s.jsxs("div",{className:"flex items-center",children:[s.jsx("div",{className:"w-4 h-4 rounded-full mr-2",style:{backgroundColor:i}}),s.jsx("input",{type:"color",value:i,onChange:I=>C(I.target.value),className:"w-8 h-6"})]})]})});return s.jsx(Fe.div,{className:"flex flex-col items-center justify-start min-h-screen p-2 bg-gray-900 w-full max-w-full",initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},children:s.jsxs("div",{className:"w-full max-w-screen-xl mx-auto flex flex-col items-center",children:[s.jsxs("div",{className:"flex justify-between items-center w-full mb-2 px-2",children:[s.jsx("button",{className:"px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition",onClick:()=>r("/"),children:"Main Menu"}),s.jsxs("div",{className:"text-2xl md:text-3xl font-bold text-white",children:["Score: ",s.jsx("span",{className:"text-green-500",children:te})]}),s.jsx("button",{className:"px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition",onClick:()=>e?Ne():J(),children:e?"Stop AI":"Start AI"})]}),s.jsxs("div",{className:"relative mx-auto flex justify-center w-full md:shadow-2xl md:rounded-xl overflow-hidden lg:mt-4",children:[s.jsx("canvas",{ref:t,className:"border-2 border-gray-700 rounded-lg shadow-lg md:rounded-xl"}),!e&&!v&&s.jsxs("div",{className:"absolute inset-0 flex flex-col items-center justify-center bg-black bg-opacity-80 rounded-lg",children:[s.jsx("h2",{className:"text-3xl font-bold text-blue-500 mb-4",children:"AI Snake"}),s.jsx("button",{className:"px-6 py-3 bg-blue-600 text-white text-xl font-semibold rounded-lg hover:bg-blue-700 transition mb-4",onClick:J,children:"Start AI"})]}),v&&s.jsxs("div",{className:"absolute inset-0 flex flex-col items-center justify-center bg-black bg-opacity-90 rounded-lg",children:[s.jsx("h2",{className:"text-3xl font-bold text-red-500 mb-2",children:"Game Over"}),s.jsxs("p",{className:"text-white text-xl mb-6",children:["Score: ",s.jsx("span",{className:"text-green-500 font-bold",children:te})]}),s.jsxs("div",{className:"flex space-x-4",children:[s.jsx("button",{className:"px-6 py-3 bg-green-600 text-white text-xl font-semibold rounded-lg hover:bg-green-700 transition",onClick:J,children:"Play Again"}),s.jsx("button",{className:"px-6 py-3 bg-gray-600 text-white text-xl font-semibold rounded-lg hover:bg-gray-700 transition",onClick:()=>r("/"),children:"Main Menu"})]})]})]}),s.jsxs("div",{className:"w-full max-w-screen-xl mx-auto mt-3 bg-gray-800 p-3 rounded-lg",children:[s.jsxs("div",{className:"flex border-b border-gray-700 mb-3",children:[s.jsx("button",{className:`px-4 py-2 text-sm font-medium rounded-t-lg ${A==="algorithm"?"bg-gray-700 text-white":"bg-gray-800 text-gray-400 hover:text-white hover:bg-gray-700"}`,onClick:()=>U("algorithm"),children:"Algorithm"}),s.jsx("button",{className:`px-4 py-2 text-sm font-medium rounded-t-lg ${A==="speed"?"bg-gray-700 text-white":"bg-gray-800 text-gray-400 hover:text-white hover:bg-gray-700"}`,onClick:()=>U("speed"),children:"Speed"}),s.jsx("button",{className:`px-4 py-2 text-sm font-medium rounded-t-lg ${A==="visualization"?"bg-gray-700 text-white":"bg-gray-800 text-gray-400 hover:text-white hover:bg-gray-700"}`,onClick:()=>U("visualization"),children:"Visualization"})]}),s.jsxs("div",{className:"px-1",children:[A==="algorithm"&&s.jsxs("div",{children:[s.jsxs("div",{className:"mb-4",children:[s.jsx("label",{className:"text-gray-300 block mb-2 font-medium",children:"Algorithm Selection"}),s.jsx("div",{className:"grid grid-cols-2 md:grid-cols-5 gap-2",children:[{id:"astar",label:"A*",description:"Balanced pathfinding with heuristic"},{id:"bfs",label:"BFS",description:"Breadth-first search, finds shortest path"},{id:"greedy",label:"Greedy",description:"Always moves toward food, may get trapped"},{id:"dijkstra",label:"Dijkstra",description:"Exhaustive search for shortest path"},{id:"hamiltonian",label:"Hamiltonian",description:"Guaranteed to win but slower"}].map(c=>s.jsxs("div",{className:`p-3 rounded-lg cursor-pointer transition-all ${w===c.id?"bg-blue-600 shadow-lg transform scale-105":"bg-gray-700 hover:bg-gray-600"}`,onClick:()=>ge(c.id),children:[s.jsx("div",{className:"font-semibold text-white",children:c.label}),s.jsx("div",{className:"text-xs text-gray-300 mt-1",children:c.description})]},c.id))})]}),s.jsxs("div",{className:"mb-4",children:[s.jsx("h3",{className:"text-gray-300 mb-3 font-medium",children:"Algorithm Configuration"}),w==="astar"&&s.jsxs("div",{children:[Q("Heuristic Weight",R,pe,.1,5,.1,"Higher values make the path more direct but may not be optimal"),s.jsx("div",{className:"text-xs text-gray-400 mt-1",children:"A* balances between Dijkstra (weight=0) and Greedy (weight=∞). Adjust the weight to control how strongly the algorithm favors paths toward the goal."})]}),w==="hamiltonian"&&s.jsxs("div",{children:[Q("Shortcut Threshold (%)",G,ve,0,100,1,"% of board size where shortcuts are always considered safe"),s.jsx("div",{className:"text-xs text-gray-400 mt-1",children:"The Hamiltonian algorithm creates a path that visits every cell exactly once, but can take shortcuts when safe. Higher values make the AI more aggressive in taking shortcuts when the snake is small."})]}),w==="greedy"&&s.jsx("div",{className:"text-xs text-gray-400",children:"Greedy always chooses the move that brings it closest to the food. This can be fast but may lead to trapping itself."}),w==="bfs"&&s.jsx("div",{className:"text-xs text-gray-400",children:"BFS (Breadth-First Search) explores all possible paths layer by layer, guaranteeing the shortest path to the food if one exists."}),w==="dijkstra"&&s.jsx("div",{className:"text-xs text-gray-400",children:"Dijkstra's algorithm explores all possible paths, prioritizing the shortest ones. It's very thorough but slower than other algorithms."})]})]}),A==="speed"&&s.jsxs("div",{children:[s.jsx("label",{className:"text-gray-300 block mb-2 font-medium",children:"Game Speed"}),s.jsx("div",{className:"grid grid-cols-7 gap-1 mb-3",children:[{id:"very-slow",label:"Very Slow",ms:300},{id:"slow",label:"Slow",ms:200},{id:"normal",label:"Normal",ms:150},{id:"fast",label:"Fast",ms:100},{id:"very-fast",label:"Very Fast",ms:50},{id:"turbo",label:"Turbo",ms:25},{id:"instant",label:"Instant",ms:5}].map(c=>s.jsxs("button",{className:`px-2 py-3 text-sm rounded-md text-white ${l===c.id?"bg-green-600 font-semibold":"bg-gray-700 hover:bg-gray-600"}`,onClick:()=>m(c.id),children:[s.jsx("div",{className:"text-xs md:text-sm",children:c.label}),s.jsxs("div",{className:"text-xs text-gray-300 mt-1 hidden md:block",children:[c.ms,"ms"]})]},c.id))}),s.jsx("div",{className:"bg-gray-700 p-3 rounded-lg",children:s.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[s.jsxs("div",{children:[s.jsx("h4",{className:"text-white text-sm font-medium mb-1",children:"Current Speed"}),s.jsx("div",{className:"text-green-500 text-lg font-mono",children:{"very-slow":"300ms",slow:"200ms",normal:"150ms",fast:"100ms","very-fast":"50ms",turbo:"25ms",instant:"5ms"}[l]}),s.jsx("div",{className:"text-xs text-gray-400 mt-1",children:"Time between moves"})]}),s.jsxs("div",{children:[s.jsx("h4",{className:"text-white text-sm font-medium mb-1",children:"Algorithm"}),s.jsx("div",{className:"text-blue-500 text-lg capitalize",children:w}),s.jsx("div",{className:"text-xs text-gray-400 mt-1",children:"Current pathfinding method"})]})]})})]}),A==="visualization"&&s.jsxs("div",{children:[s.jsx("h3",{className:"text-gray-300 mb-3 font-medium",children:"Visualization Settings"}),s.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[s.jsxs("div",{className:"bg-gray-700 p-3 rounded-lg",children:[s.jsx("h4",{className:"text-white text-sm font-medium mb-2",children:"Display Options"}),s.jsxs("div",{className:"space-y-2",children:[s.jsxs("label",{className:"flex items-center justify-between cursor-pointer",children:[s.jsx("span",{className:"text-gray-300 text-sm",children:"Show Path"}),s.jsx("div",{className:`w-10 h-5 rounded-full ${M?"bg-blue-600":"bg-gray-600"} relative transition-colors`,onClick:()=>fe(!M),children:s.jsx("div",{className:`absolute w-4 h-4 rounded-full bg-white top-0.5 transition-all ${M?"right-0.5":"left-0.5"}`})})]}),s.jsxs("label",{className:"flex items-center justify-between cursor-pointer",children:[s.jsx("span",{className:"text-gray-300 text-sm",children:"Show Hamiltonian Cycle"}),s.jsx("div",{className:`w-10 h-5 rounded-full ${H?"bg-blue-600":"bg-gray-600"} relative transition-colors`,onClick:()=>ye(!H),children:s.jsx("div",{className:`absolute w-4 h-4 rounded-full bg-white top-0.5 transition-all ${H?"right-0.5":"left-0.5"}`})})]}),s.jsxs("label",{className:"flex items-center justify-between cursor-pointer",children:[s.jsx("span",{className:"text-gray-300 text-sm",children:"Show Debug Info"}),s.jsx("div",{className:`w-10 h-5 rounded-full ${K?"bg-blue-600":"bg-gray-600"} relative transition-colors`,onClick:()=>be(!K),children:s.jsx("div",{className:`absolute w-4 h-4 rounded-full bg-white top-0.5 transition-all ${K?"right-0.5":"left-0.5"}`})})]})]})]}),s.jsxs("div",{className:"bg-gray-700 p-3 rounded-lg",children:[s.jsx("h4",{className:"text-white text-sm font-medium mb-2",children:"Appearance"}),s.jsxs("div",{children:[je("Path Color",q,we),Q("Cycle Opacity",Y,Se,.05,.5,.05)]})]})]})]})]})]})]})})};export{Re as default};
