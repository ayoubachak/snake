var Pe=Object.defineProperty;var ke=(h,t,e)=>t in h?Pe(h,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[t]=e;var p=(h,t,e)=>ke(h,typeof t!="symbol"?t+"":t,e);import{u as Fe,r as f,j as i}from"./index-BBZVV66L.js";import{u as ze}from"./gameStore-CmDhYiW6.js";import{m as Te}from"./proxy-BArGkMFt.js";const N={manhattanDistance(h,t,e=1){return e*(Math.abs(h.x-t.x)+Math.abs(h.y-t.y))},isValidPosition(h,t,e,s){if(h.x<0||h.x>=t||h.y<0||h.y>=t||s.some(r=>r.x===h.x&&r.y===h.y))return!1;for(let r=0;r<e.length-1;r++)if(e[r].x===h.x&&e[r].y===h.y)return!1;return!0},getNeighbors(h,t,e,s){return[{x:h.x,y:h.y-1},{x:h.x,y:h.y+1},{x:h.x-1,y:h.y},{x:h.x+1,y:h.y}].filter(o=>N.isValidPosition(o,t,e,s))},getDirectionFromPositions(h,t){return t.x<h.x?"LEFT":t.x>h.x?"RIGHT":t.y<h.y?"UP":t.y>h.y?"DOWN":"RIGHT"},getRandomDirection(h,t,e,s){var n,x;const r=N.getNeighbors(h,e,t,s);if(r.length===0){if(t.length>1){const l=h.x-(((n=t[1])==null?void 0:n.x)||h.x),g=h.y-(((x=t[1])==null?void 0:x.y)||h.y);if(l>0)return"RIGHT";if(l<0)return"LEFT";if(g>0)return"DOWN";if(g<0)return"UP"}return"RIGHT"}const o=r[Math.floor(Math.random()*r.length)];return N.getDirectionFromPositions(h,o)}};class B{constructor(t){p(this,"boardSize",0);p(this,"snake",[]);p(this,"food",{x:0,y:0});p(this,"obstacles",[]);p(this,"path",[]);p(this,"pathIndex",0);p(this,"config");this.config={heuristicWeight:(t==null?void 0:t.heuristicWeight)??1}}initialize(t,e,s,r){this.boardSize=t,this.snake=[...e],this.food={...s},this.obstacles=[...r],this.calculatePath()}update(t,e,s){this.snake=[...t],this.food={...e},this.obstacles=[...s],this.calculatePath()}getPath(){return[...this.path]}getVisualizationData(){return{}}getNextDirection(t,e){if(this.path.length===0||this.pathIndex>=this.path.length)return N.getRandomDirection(t[0],t,this.boardSize,this.obstacles);const s=t[0],r=this.path[this.pathIndex];return this.pathIndex++,N.getDirectionFromPositions(s,r)}findPath(t,e){const s=[],r=new Set,o={x:t.x,y:t.y,g:0,h:this.heuristic(t,e),f:this.heuristic(t,e),parent:null};for(s.push(o);s.length>0;){s.sort((l,g)=>l.f-g.f);const n=s.shift();if(r.add(`${n.x},${n.y}`),n.x===e.x&&n.y===e.y){const l=[];let g=n;for(;g!==null;)l.unshift({x:g.x,y:g.y}),g=g.parent;return l.shift(),l}const x=N.getNeighbors({x:n.x,y:n.y},this.boardSize,this.snake,this.obstacles);for(const l of x){if(r.has(`${l.x},${l.y}`))continue;const g=n.g+1,C=s.find(j=>j.x===l.x&&j.y===l.y);if(C)g<C.g&&(C.g=g,C.f=g+C.h,C.parent=n);else{const j={x:l.x,y:l.y,g,h:this.heuristic(l,e),f:g+this.heuristic(l,e),parent:n};s.push(j)}}}return null}heuristic(t,e){return N.manhattanDistance(t,e,this.config.heuristicWeight)}calculatePath(){if(this.snake.length===0)return;const t=this.snake[0],e=this.findPath(t,this.food);if(e&&e.length>0)this.path=e,this.pathIndex=0;else{const s=this.findSafeMove();s?(this.path=[s],this.pathIndex=0):this.path=[]}}findSafeMove(){if(this.snake.length===0)return null;const t=this.snake[0],e=N.getNeighbors(t,this.boardSize,this.snake,this.obstacles);return e.length===0?null:e.reduce((s,r)=>{let o=Number.MAX_SAFE_INTEGER;for(let x=1;x<this.snake.length;x++){const l=this.snake[x],g=this.heuristic(r,l);o=Math.min(o,g)}let n=Number.MAX_SAFE_INTEGER;if(s)for(let x=1;x<this.snake.length;x++){const l=this.snake[x],g=this.heuristic(s,l);n=Math.min(n,g)}return o>n?r:s},e[0])}}class De{constructor(t){p(this,"boardSize",0);p(this,"snake",[]);p(this,"food",{x:0,y:0});p(this,"obstacles",[]);p(this,"cycle",[]);p(this,"hamiltonianCycle",new Map);p(this,"currentCycleIndex",0);p(this,"config");p(this,"lastChosenPathForViz",[]);this.config={shortcutThreshold:(t==null?void 0:t.shortcutThreshold)??33}}initialize(t,e,s,r){if(this.boardSize=t,this.snake=[...e],this.food={...s},this.obstacles=[...r],this.generateHamiltonianCycle(),e.length>0){const o=e[0],n=`${o.x},${o.y}`;this.hamiltonianCycle.has(n)&&(this.currentCycleIndex=this.hamiltonianCycle.get(n))}this.lastChosenPathForViz=[]}update(t,e,s){if(this.snake=[...t],this.food={...e},this.obstacles=[...s],t.length>0){const r=t[0],o=`${r.x},${r.y}`;this.hamiltonianCycle.has(o)&&(this.currentCycleIndex=this.hamiltonianCycle.get(o))}}isCellValidForCycle(t,e){return!(t<0||t>=this.boardSize||e<0||e>=this.boardSize||this.obstacles.some(s=>s.x===t&&s.y===e))}generateEvenSizeCycle(t){for(let e=0;e<this.boardSize;e++)if(e%2===0)for(let s=0;s<this.boardSize;s++)this.isCellValidForCycle(s,e)&&t.push({x:s,y:e});else for(let s=this.boardSize-1;s>=0;s--)this.isCellValidForCycle(s,e)&&t.push({x:s,y:e})}generateOddSizeCycle(t){for(let e=0;e<this.boardSize-1;e++)if(e%2===0)for(let s=0;s<this.boardSize-1;s++)this.isCellValidForCycle(s,e)&&t.push({x:s,y:e});else for(let s=this.boardSize-2;s>=0;s--)this.isCellValidForCycle(s,e)&&t.push({x:s,y:e});for(let e=0;e<this.boardSize-1;e++)this.isCellValidForCycle(this.boardSize-1,e)&&t.push({x:this.boardSize-1,y:e});for(let e=this.boardSize-1;e>=0;e--)this.isCellValidForCycle(e,this.boardSize-1)&&t.push({x:e,y:this.boardSize-1})}generateHamiltonianCycle(){this.cycle=[],this.hamiltonianCycle.clear();const t=[];this.boardSize%2===0?this.generateEvenSizeCycle(t):this.generateOddSizeCycle(t),this.cycle=t;for(let e=0;e<this.cycle.length;e++){const s=this.cycle[e];this.hamiltonianCycle.set(`${s.x},${s.y}`,e)}this.cycle.length===0&&this.boardSize*this.boardSize-this.obstacles.length>0&&console.warn("Hamiltonian cycle generation resulted in an empty cycle despite available cells.")}getPath(){return this.lastChosenPathForViz}getVisualizationData(){return{hamiltonianCycle:this.cycle}}isCellSafeForMove(t,e){if(!t||!this.isCellValidForCycle(t.x,t.y))return!1;for(let s=0;s<e.length-1;s++)if(e[s].x===t.x&&e[s].y===t.y)return!1;return!0}fallbackToAStarOrDefault(t,e){this.lastChosenPathForViz=[];const s=new B({heuristicWeight:1});s.initialize(this.boardSize,e,this.food,this.obstacles);const r=s.findPath(t,this.food);if(r&&r.length>0){const n=r[0];if(this.isCellSafeForMove(n,e))return this.lastChosenPathForViz=r,{nextPos:n,path:r}}const o=N.getNeighbors(t,this.boardSize,e,this.obstacles).filter(n=>this.isCellSafeForMove(n,e));if(o.length>0){const n=o[Math.floor(Math.random()*o.length)];return this.lastChosenPathForViz=[n],{nextPos:n,path:[n]}}if(this.cycle.length>0&&this.hamiltonianCycle.has(`${t.x},${t.y}`)){const n=(this.hamiltonianCycle.get(`${t.x},${t.y}`)+1)%this.cycle.length,x=this.cycle[n];return this.lastChosenPathForViz=[x],{nextPos:x,path:[x]}}return this.lastChosenPathForViz=[{x:t.x+1,y:t.y}],{nextPos:{x:t.x+1,y:t.y},path:this.lastChosenPathForViz}}getNextDirection(t,e){this.lastChosenPathForViz=[];const s=t[0];if(!s)return"RIGHT";if(this.cycle.length===0){const l=this.fallbackToAStarOrDefault(s,t);return N.getDirectionFromPositions(s,l.nextPos?l.nextPos:{x:s.x+1,y:s.y})}const r=`${s.x},${s.y}`;if(!this.hamiltonianCycle.has(r)){const l=this.fallbackToAStarOrDefault(s,t);return N.getDirectionFromPositions(s,l.nextPos?l.nextPos:{x:s.x+1,y:s.y})}this.currentCycleIndex=this.hamiltonianCycle.get(r);let o=null,n=[];const x=this.findShortcutToFood();if(x&&this.isCellSafeForMove(x,t)){o=x;const l=this.findDirectPathToFood(s,o);n=l||[o]}if(!o)for(let l=1;l<=Math.min(5,this.cycle.length);l++){const g=(this.currentCycleIndex+l)%this.cycle.length,C=this.cycle[g];if(this.isCellSafeForMove(C,t)){o=C,n=[];for(let j=0;j<Math.min(10,this.cycle.length);j++)n.push(this.cycle[(this.currentCycleIndex+1+j)%this.cycle.length]);break}}if(!o){const l=this.fallbackToAStarOrDefault(s,t);o=l.nextPos,n=l.path}return this.lastChosenPathForViz=n,o?N.getDirectionFromPositions(s,o):(this.lastChosenPathForViz=[{x:s.x+1,y:s.y}],"RIGHT")}findPath(){return this.lastChosenPathForViz.length>0?this.lastChosenPathForViz:null}findShortcutToFood(){if(this.snake.length===0||!this.food)return null;const t=this.snake[0];if(this.isShortcutSafe(t,this.food)){const e=this.findDirectPathToFood(t,this.food);if(e&&e.length>0)return e[0]}return null}findDirectPathToFood(t,e){const s=[{pos:t,path:[]}],r=new Set;for(r.add(`${t.x},${t.y}`);s.length>0;){const{pos:o,path:n}=s.shift();if(o.x===e.x&&o.y===e.y)return n;const x=N.getNeighbors(o,this.boardSize,n.length>0?[t,...n]:[t],this.obstacles);for(const l of x){const g=`${l.x},${l.y}`;if(!r.has(g)&&this.isCellSafeForMove(l,[t,...n])){r.add(g);const C=[...n,l];s.push({pos:l,path:C})}}}return null}isShortcutSafe(t,e){const s=Math.abs(t.x-e.x)+Math.abs(t.y-e.y),r=Math.floor(this.boardSize*(this.config.shortcutThreshold/100));if(s===0||s>r&&r>0)return!1;const o=this.boardSize*this.boardSize,n=this.snake.length;if(n/o>.7)return!1;const l=n+1;return o-l-this.obstacles.length<o*.2?!1:this.canReachTailAfterShortcut(e)}canReachTailAfterShortcut(t){if(this.snake.length<2)return!0;const e=[t,...this.snake.slice(0,this.snake.length-1)],s=e[0],r=e[e.length-1],o=new B({heuristicWeight:1});o.initialize(this.boardSize,e,r,this.obstacles);const n=o.findPath(s,r);return n!==null&&n.length>0}}class Ie{static createAlgorithm(t,e,s,r,o,n){let x;switch(t){case"astar":x=new B({heuristicWeight:(n==null?void 0:n.heuristicWeight)??1});break;case"hamiltonian":x=new De({shortcutThreshold:((n==null?void 0:n.shortcutThreshold)??33)/100});break;default:x=new B({heuristicWeight:(n==null?void 0:n.heuristicWeight)??1})}return x.initialize(e,s,r,o),x}}class he{constructor(t,e,s,r,o="astar",n){p(this,"config");p(this,"pathfinder");this.config={heuristicWeight:(n==null?void 0:n.heuristicWeight)??1,shortcutThreshold:(n==null?void 0:n.shortcutThreshold)??33},this.pathfinder=Ie.createAlgorithm(o,t,e,s,r,this.config)}update(t,e,s){this.pathfinder.update(t,e,s)}getNextDirection(t){const e=this.getCurrentDirection(t);return this.pathfinder.getNextDirection(t,e)}getCurrentDirection(t){if(t.length<2)return"RIGHT";const e=t[0],s=t[1];return e.x<s.x?"LEFT":e.x>s.x?"RIGHT":e.y<s.y?"UP":e.y>s.y?"DOWN":"RIGHT"}getPath(){return this.pathfinder.getPath()}getHamiltonianCycle(){return this.pathfinder.getVisualizationData().hamiltonianCycle||[]}}const He=()=>{const h=Fe(),t=f.useRef(null),[e,s]=f.useState(!1),[r,o]=f.useState("normal"),[n,x]=f.useState(null),[l,g]=f.useState([]),[C,j]=f.useState(!1),{snake:u,food:z,obstacles:D,score:se,gameStatus:ie,boardSize:T,theme:ce,moveSnake:ae,startGame:de,pauseGame:ue,resetGame:xe,setDirection:ne,direction:U}=ze(),F={CLASSIC:{background:"#000000",snake:"#00FF00",food:"#FF0000",obstacles:"#888888",gridLines:"#333333",path:"#0088FF"},DARK:{background:"#111111",snake:"#4CAF50",food:"#F44336",obstacles:"#757575",gridLines:"#212121",path:"#03A9F4"},RETRO:{background:"#003366",snake:"#FFCC00",food:"#FF6633",obstacles:"#666699",gridLines:"#004488",path:"#33CCFF"},NEON:{background:"#0D0221",snake:"#39FF14",food:"#FF00FF",obstacles:"#3E065F",gridLines:"#1E0555",path:"#00FFFF"}}[ce],re=f.useRef(0),[S,ge]=f.useState("astar"),[E,fe]=f.useState({snakeLength:0,headPosition:null}),[X,K]=f.useState([]),[$,me]=f.useState(!0),[R,ye]=f.useState(!0),[Y,be]=f.useState(!0),[H,pe]=f.useState(1),[A,q]=f.useState("algorithm"),[V,Se]=f.useState(33),[J,ve]=f.useState(F.path),[_,we]=f.useState(.1);f.useEffect(()=>{u.length>0&&fe({snakeLength:u.length,headPosition:{x:u[0].x,y:u[0].y}})},[u]),f.useEffect(()=>{if(e&&!n){const d=new he(T,u,z,D,S,{heuristicWeight:H,shortcutThreshold:V});x(d)}},[e,T,u,z,D,S,H,V]),f.useEffect(()=>{if(e&&n){const d=new he(T,u,z,D,S,{heuristicWeight:H,shortcutThreshold:V});x(d),K(S==="hamiltonian"?d.getHamiltonianCycle():[])}},[S,e,T,u,z,D,H,V]),f.useEffect(()=>{if(e&&n){n.update(u,z,D);const d=n.getPath();g(d),S==="hamiltonian"&&K(n.getHamiltonianCycle());const a=n.getNextDirection(u);a&&ne(a)}},[e,u,z,D,n,ne,S]),f.useEffect(()=>{let d;if(e){const a={"very-slow":300,slow:200,normal:150,fast:100,"very-fast":50,turbo:25,instant:5};d=window.setInterval(()=>{ae()},a[r])}return()=>{d&&clearInterval(d)}},[e,r,ae]),f.useEffect(()=>{const d=t.current;if(!d)return;const a=d.getContext("2d");if(!a)return;console.log("Snake array in render:",u),(!u||u.length===0)&&console.warn("Empty snake array detected in render function!");const P=window.innerWidth,k=window.innerHeight;let b=Math.min(P*.9,k-250);b=Math.max(b,300),b=Math.floor(b),d.width=b,d.height=b;const c=b/T;re.current=c,a.fillStyle=F.background,a.fillRect(0,0,d.width,d.height),a.strokeStyle=F.gridLines,a.lineWidth=.5;for(let y=0;y<=T;y++)a.beginPath(),a.moveTo(y*c,0),a.lineTo(y*c,d.height),a.stroke(),a.beginPath(),a.moveTo(0,y*c),a.lineTo(d.width,y*c),a.stroke();if(e&&l.length>0&&$&&(a.strokeStyle=J,a.lineWidth=2,a.beginPath(),u.length>0)){const y=u[0];a.moveTo((y.x+.5)*c,(y.y+.5)*c),l.forEach(m=>{a.lineTo((m.x+.5)*c,(m.y+.5)*c)}),a.stroke()}if(e&&S==="hamiltonian"&&X.length>0&&R){a.strokeStyle=`rgba(255, 255, 255, ${_})`,a.lineWidth=1,a.beginPath();const y=X[0];a.moveTo((y.x+.5)*c,(y.y+.5)*c),X.forEach((m,v)=>{v>0&&a.lineTo((m.x+.5)*c,(m.y+.5)*c)}),a.lineTo((y.x+.5)*c,(y.y+.5)*c),a.stroke(),a.fillStyle=`rgba(255, 255, 255, ${_})`,X.forEach(m=>{a.beginPath(),a.arc((m.x+.5)*c,(m.y+.5)*c,c*.1,0,Math.PI*2),a.fill()})}a.fillStyle=F.obstacles,D.forEach(({x:y,y:m})=>{a.fillRect(y*c,m*c,c,c)}),a.fillStyle=F.food,a.beginPath();const ee=z.x*c+c/2,je=z.y*c+c/2;if(a.arc(ee,je,c/2,0,Math.PI*2),a.fill(),u.length>1)for(let y=1;y<u.length;y++){const m=u[y],v=m.x*c,M=m.y*c;a.fillStyle=y%2===0?F.snake:le(F.snake,-10),a.fillRect(v,M,c,c)}if(u.length>0){console.log("Rendering head:",u[0]),console.log("Animation properties:",{x:u[0].x,y:u[0].y,animX:u[0].animX,animY:u[0].animY,prevX:u[0].prevX,prevY:u[0].prevY});const y=u[0],m=(y.x+.5)*c,v=(y.y+.5)*c,M=c*.6;a.beginPath(),a.arc(m,v,M+2,0,Math.PI*2),a.fillStyle="rgba(255, 255, 255, 0.7)",a.fill(),a.beginPath(),a.arc(m,v,M,0,Math.PI*2);const te=a.createRadialGradient(m,v,0,m,v,M);te.addColorStop(0,le(F.snake,30)),te.addColorStop(1,F.snake),a.fillStyle=te,a.fill(),a.fillStyle="#000000";const oe=c*.15;let G,W,L,O;const w=M*.5;switch(U){case"UP":G=m-w,W=v-w*.5,L=m+w,O=v-w*.5;break;case"DOWN":G=m-w,W=v+w*.5,L=m+w,O=v+w*.5;break;case"LEFT":G=m-w*.5,W=v-w,L=m-w*.5,O=v+w;break;case"RIGHT":default:G=m+w*.5,W=v-w,L=m+w*.5,O=v+w;break}a.beginPath(),a.arc(G,W,oe,0,Math.PI*2),a.fill(),a.beginPath(),a.arc(L,O,oe,0,Math.PI*2),a.fill()}e&&E.headPosition&&Y&&(a.fillStyle="rgba(255, 255, 255, 0.8)",a.font="12px Arial",a.fillText(`Snake Length: ${E.snakeLength}`,10,20),a.fillText(`Head: (${E.headPosition.x}, ${E.headPosition.y})`,10,40),a.fillText(`Direction: ${U}`,10,60),a.fillText(`Algorithm: ${S.toUpperCase()}`,10,80))},[u,z,D,T,F,l,e,U,E,$,R,_,J]);const le=(d,a)=>{const P=parseInt(d.replace("#",""),16),k=Math.round(2.55*a),I=(P>>16)+k,b=(P>>8&255)+k,c=(P&255)+k;return"#"+(16777216+(I<255?I<0?0:I:255)*65536+(b<255?b<0?0:b:255)*256+(c<255?c<0?0:c:255)).toString(16).slice(1)};f.useEffect(()=>{const d=()=>{const a=t.current;if(!a)return;const P=window.innerWidth,k=window.innerHeight;let b=Math.min(P*.9,k-250);b=Math.max(b,300),b=Math.floor(b),a.width=b,a.height=b,re.current=b/T};return window.addEventListener("resize",d),()=>window.removeEventListener("resize",d)},[T]),f.useEffect(()=>{ie==="GAME_OVER"&&e&&(j(!0),s(!1))},[ie,e]);const Q=()=>{j(!1),xe(),de(),s(!0)},Ce=()=>{ue(),s(!1),x(null),g([])};f.useEffect(()=>{u.length>0&&e&&console.log("Snake update:",{length:u.length,head:u[0],tail:u[u.length-1],fullSnake:[...u]})},[u,e]);const Z=(d,a,P,k,I,b,c)=>i.jsxs("div",{className:"w-full mb-3",children:[i.jsxs("div",{className:"flex justify-between items-center mb-1",children:[i.jsxs("label",{className:"text-gray-300 text-sm",children:[d,c&&i.jsx("span",{className:"ml-1 text-gray-500 cursor-help",title:c,children:"ⓘ"})]}),i.jsx("span",{className:"text-white text-sm font-mono",children:a})]}),i.jsx("input",{type:"range",min:k,max:I,step:b,value:a,onChange:ee=>P(parseFloat(ee.target.value)),className:"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer"})]}),Ne=(d,a,P)=>i.jsx("div",{className:"w-full mb-3",children:i.jsxs("div",{className:"flex justify-between items-center mb-1",children:[i.jsx("label",{className:"text-gray-300 text-sm",children:d}),i.jsxs("div",{className:"flex items-center",children:[i.jsx("div",{className:"w-4 h-4 rounded-full mr-2",style:{backgroundColor:a}}),i.jsx("input",{type:"color",value:a,onChange:k=>P(k.target.value),className:"w-8 h-6"})]})]})});return i.jsx(Te.div,{className:"flex flex-col items-center justify-start min-h-screen p-2 bg-gray-900 w-full max-w-full",initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},children:i.jsxs("div",{className:"w-full max-w-screen-xl mx-auto flex flex-col items-center",children:[i.jsxs("div",{className:"flex justify-between items-center w-full mb-2 px-2",children:[i.jsx("button",{className:"px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition",onClick:()=>h("/"),children:"Main Menu"}),i.jsxs("div",{className:"text-2xl md:text-3xl font-bold text-white",children:["Score: ",i.jsx("span",{className:"text-green-500",children:se})]}),i.jsx("button",{className:"px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition",onClick:()=>e?Ce():Q(),children:e?"Stop AI":"Start AI"})]}),i.jsxs("div",{className:"relative mx-auto flex justify-center w-full md:shadow-2xl md:rounded-xl overflow-hidden lg:mt-4",children:[i.jsx("canvas",{ref:t,className:"border-2 border-gray-700 rounded-lg shadow-lg md:rounded-xl"}),!e&&!C&&i.jsxs("div",{className:"absolute inset-0 flex flex-col items-center justify-center bg-black bg-opacity-80 rounded-lg",children:[i.jsx("h2",{className:"text-3xl font-bold text-blue-500 mb-4",children:"AI Snake"}),i.jsx("button",{className:"px-6 py-3 bg-blue-600 text-white text-xl font-semibold rounded-lg hover:bg-blue-700 transition mb-4",onClick:Q,children:"Start AI"})]}),C&&i.jsxs("div",{className:"absolute inset-0 flex flex-col items-center justify-center bg-black bg-opacity-90 rounded-lg",children:[i.jsx("h2",{className:"text-3xl font-bold text-red-500 mb-2",children:"Game Over"}),i.jsxs("p",{className:"text-white text-xl mb-6",children:["Score: ",i.jsx("span",{className:"text-green-500 font-bold",children:se})]}),i.jsxs("div",{className:"flex space-x-4",children:[i.jsx("button",{className:"px-6 py-3 bg-green-600 text-white text-xl font-semibold rounded-lg hover:bg-green-700 transition",onClick:Q,children:"Play Again"}),i.jsx("button",{className:"px-6 py-3 bg-gray-600 text-white text-xl font-semibold rounded-lg hover:bg-gray-700 transition",onClick:()=>h("/"),children:"Main Menu"})]})]})]}),i.jsxs("div",{className:"w-full max-w-screen-xl mx-auto mt-3 bg-gray-800 p-3 rounded-lg",children:[i.jsxs("div",{className:"flex border-b border-gray-700 mb-3",children:[i.jsx("button",{className:`px-4 py-2 text-sm font-medium rounded-t-lg ${A==="algorithm"?"bg-gray-700 text-white":"bg-gray-800 text-gray-400 hover:text-white hover:bg-gray-700"}`,onClick:()=>q("algorithm"),children:"Algorithm"}),i.jsx("button",{className:`px-4 py-2 text-sm font-medium rounded-t-lg ${A==="speed"?"bg-gray-700 text-white":"bg-gray-800 text-gray-400 hover:text-white hover:bg-gray-700"}`,onClick:()=>q("speed"),children:"Speed"}),i.jsx("button",{className:`px-4 py-2 text-sm font-medium rounded-t-lg ${A==="visualization"?"bg-gray-700 text-white":"bg-gray-800 text-gray-400 hover:text-white hover:bg-gray-700"}`,onClick:()=>q("visualization"),children:"Visualization"})]}),i.jsxs("div",{className:"px-1",children:[A==="algorithm"&&i.jsxs("div",{children:[i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"text-gray-300 block mb-2 font-medium",children:"Algorithm Selection"}),i.jsx("div",{className:"grid grid-cols-2 md:grid-cols-5 gap-2",children:[{id:"astar",label:"A*",description:"Balanced pathfinding with heuristic"},{id:"bfs",label:"BFS",description:"Breadth-first search, finds shortest path"},{id:"greedy",label:"Greedy",description:"Always moves toward food, may get trapped"},{id:"dijkstra",label:"Dijkstra",description:"Exhaustive search for shortest path"},{id:"hamiltonian",label:"Hamiltonian",description:"Guaranteed to win but slower"}].map(d=>i.jsxs("div",{className:`p-3 rounded-lg cursor-pointer transition-all ${S===d.id?"bg-blue-600 shadow-lg transform scale-105":"bg-gray-700 hover:bg-gray-600"}`,onClick:()=>ge(d.id),children:[i.jsx("div",{className:"font-semibold text-white",children:d.label}),i.jsx("div",{className:"text-xs text-gray-300 mt-1",children:d.description})]},d.id))})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("h3",{className:"text-gray-300 mb-3 font-medium",children:"Algorithm Configuration"}),S==="astar"&&i.jsxs("div",{children:[Z("Heuristic Weight",H,pe,.1,5,.1,"Higher values make the path more direct but may not be optimal"),i.jsx("div",{className:"text-xs text-gray-400 mt-1",children:"A* balances between Dijkstra (weight=0) and Greedy (weight=∞). Adjust the weight to control how strongly the algorithm favors paths toward the goal."})]}),S==="hamiltonian"&&i.jsxs("div",{children:[Z("Shortcut Threshold (%)",V,Se,0,100,1,"% of board size where shortcuts are always considered safe"),i.jsx("div",{className:"text-xs text-gray-400 mt-1",children:"The Hamiltonian algorithm creates a path that visits every cell exactly once, but can take shortcuts when safe. Higher values make the AI more aggressive in taking shortcuts when the snake is small."})]}),S==="greedy"&&i.jsx("div",{className:"text-xs text-gray-400",children:"Greedy always chooses the move that brings it closest to the food. This can be fast but may lead to trapping itself."}),S==="bfs"&&i.jsx("div",{className:"text-xs text-gray-400",children:"BFS (Breadth-First Search) explores all possible paths layer by layer, guaranteeing the shortest path to the food if one exists."}),S==="dijkstra"&&i.jsx("div",{className:"text-xs text-gray-400",children:"Dijkstra's algorithm explores all possible paths, prioritizing the shortest ones. It's very thorough but slower than other algorithms."})]})]}),A==="speed"&&i.jsxs("div",{children:[i.jsx("label",{className:"text-gray-300 block mb-2 font-medium",children:"Game Speed"}),i.jsx("div",{className:"grid grid-cols-7 gap-1 mb-3",children:[{id:"very-slow",label:"Very Slow",ms:300},{id:"slow",label:"Slow",ms:200},{id:"normal",label:"Normal",ms:150},{id:"fast",label:"Fast",ms:100},{id:"very-fast",label:"Very Fast",ms:50},{id:"turbo",label:"Turbo",ms:25},{id:"instant",label:"Instant",ms:5}].map(d=>i.jsxs("button",{className:`px-2 py-3 text-sm rounded-md text-white ${r===d.id?"bg-green-600 font-semibold":"bg-gray-700 hover:bg-gray-600"}`,onClick:()=>o(d.id),children:[i.jsx("div",{className:"text-xs md:text-sm",children:d.label}),i.jsxs("div",{className:"text-xs text-gray-300 mt-1 hidden md:block",children:[d.ms,"ms"]})]},d.id))}),i.jsx("div",{className:"bg-gray-700 p-3 rounded-lg",children:i.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[i.jsxs("div",{children:[i.jsx("h4",{className:"text-white text-sm font-medium mb-1",children:"Current Speed"}),i.jsx("div",{className:"text-green-500 text-lg font-mono",children:{"very-slow":"300ms",slow:"200ms",normal:"150ms",fast:"100ms","very-fast":"50ms",turbo:"25ms",instant:"5ms"}[r]}),i.jsx("div",{className:"text-xs text-gray-400 mt-1",children:"Time between moves"})]}),i.jsxs("div",{children:[i.jsx("h4",{className:"text-white text-sm font-medium mb-1",children:"Algorithm"}),i.jsx("div",{className:"text-blue-500 text-lg capitalize",children:S}),i.jsx("div",{className:"text-xs text-gray-400 mt-1",children:"Current pathfinding method"})]})]})})]}),A==="visualization"&&i.jsxs("div",{children:[i.jsx("h3",{className:"text-gray-300 mb-3 font-medium",children:"Visualization Settings"}),i.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[i.jsxs("div",{className:"bg-gray-700 p-3 rounded-lg",children:[i.jsx("h4",{className:"text-white text-sm font-medium mb-2",children:"Display Options"}),i.jsxs("div",{className:"space-y-2",children:[i.jsxs("label",{className:"flex items-center justify-between cursor-pointer",children:[i.jsx("span",{className:"text-gray-300 text-sm",children:"Show Path"}),i.jsx("div",{className:`w-10 h-5 rounded-full ${$?"bg-blue-600":"bg-gray-600"} relative transition-colors`,onClick:()=>me(!$),children:i.jsx("div",{className:`absolute w-4 h-4 rounded-full bg-white top-0.5 transition-all ${$?"right-0.5":"left-0.5"}`})})]}),i.jsxs("label",{className:"flex items-center justify-between cursor-pointer",children:[i.jsx("span",{className:"text-gray-300 text-sm",children:"Show Hamiltonian Cycle"}),i.jsx("div",{className:`w-10 h-5 rounded-full ${R?"bg-blue-600":"bg-gray-600"} relative transition-colors`,onClick:()=>ye(!R),children:i.jsx("div",{className:`absolute w-4 h-4 rounded-full bg-white top-0.5 transition-all ${R?"right-0.5":"left-0.5"}`})})]}),i.jsxs("label",{className:"flex items-center justify-between cursor-pointer",children:[i.jsx("span",{className:"text-gray-300 text-sm",children:"Show Debug Info"}),i.jsx("div",{className:`w-10 h-5 rounded-full ${Y?"bg-blue-600":"bg-gray-600"} relative transition-colors`,onClick:()=>be(!Y),children:i.jsx("div",{className:`absolute w-4 h-4 rounded-full bg-white top-0.5 transition-all ${Y?"right-0.5":"left-0.5"}`})})]})]})]}),i.jsxs("div",{className:"bg-gray-700 p-3 rounded-lg",children:[i.jsx("h4",{className:"text-white text-sm font-medium mb-2",children:"Appearance"}),i.jsxs("div",{children:[Ne("Path Color",J,ve),Z("Cycle Opacity",_,we,.05,.5,.05)]})]})]})]})]})]})]})})};export{He as default};
